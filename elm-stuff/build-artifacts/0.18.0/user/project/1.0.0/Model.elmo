var _user$project$Model$Tile = F2(
	function (a, b) {
		return {pos: a, block: b};
	});
var _user$project$Model$LevelInfo = F6(
	function (a, b, c, d, e, f) {
		return {id: a, level: b, unlocked: c, bestStep: d, bestTime: e, failStep: f};
	});
var _user$project$Model$Model = F6(
	function (a, b, c, d, e, f) {
		return {levels: a, current: b, state: c, selected: d, time: e, timeStart: f};
	});
var _user$project$Model$Level = F6(
	function (a, b, c, d, e, f) {
		return {tiles: a, holes: b, boxes: c, player: d, won: e, steps: f};
	});
var _user$project$Model$strToLevel = function (str) {
	var xs = A2(
		_elm_lang$core$List$indexedMap,
		F2(
			function (i, a) {
				return {ctor: '_Tuple2', _0: i + 1, _1: a};
			}),
		_elm_lang$core$String$toList(
			_elm_lang$core$String$toLower(str)));
	var tiles = A3(
		_elm_lang$core$Basics$flip,
		_elm_lang$core$List$map,
		xs,
		function (_p0) {
			var _p1 = _p0;
			var _p2 = _p1._1;
			return A2(
				_user$project$Model$Tile,
				_user$project$Definitions$getPosByIndex(_p1._0),
				_elm_lang$core$Native_Utils.eq(
					_p2,
					_elm_lang$core$Native_Utils.chr('x')) ? _user$project$Types$BWall : (_elm_lang$core$Native_Utils.eq(
					_p2,
					_elm_lang$core$Native_Utils.chr('.')) ? _user$project$Types$BVoid : _user$project$Types$BFloor));
		});
	var holes = A2(
		_elm_lang$core$List$map,
		function (_p3) {
			return _user$project$Definitions$getPosByIndex(
				_elm_lang$core$Tuple$first(_p3));
		},
		A2(
			_elm_lang$core$List$filter,
			function (_p4) {
				var _p5 = _p4;
				var _p6 = _p5._1;
				return _elm_lang$core$Native_Utils.eq(
					_p6,
					_elm_lang$core$Native_Utils.chr('o')) || _elm_lang$core$Native_Utils.eq(
					_p6,
					_elm_lang$core$Native_Utils.chr('k'));
			},
			xs));
	var boxes = A2(
		_elm_lang$core$List$map,
		function (_p7) {
			return _user$project$Definitions$getPosByIndex(
				_elm_lang$core$Tuple$first(_p7));
		},
		A2(
			_elm_lang$core$List$filter,
			function (_p8) {
				var _p9 = _p8;
				var _p10 = _p9._1;
				return _elm_lang$core$Native_Utils.eq(
					_p10,
					_elm_lang$core$Native_Utils.chr('b')) || _elm_lang$core$Native_Utils.eq(
					_p10,
					_elm_lang$core$Native_Utils.chr('k'));
			},
			xs));
	var player = A2(
		_elm_lang$core$Maybe$withDefault,
		{ctor: '_Tuple2', _0: 5, _1: 5},
		_elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$map,
				function (_p11) {
					return _user$project$Definitions$getPosByIndex(
						_elm_lang$core$Tuple$first(_p11));
				},
				A2(
					_elm_lang$core$List$filter,
					function (_p12) {
						var _p13 = _p12;
						return _elm_lang$core$Native_Utils.eq(
							_p13._1,
							_elm_lang$core$Native_Utils.chr('p'));
					},
					xs))));
	return A6(_user$project$Model$Level, tiles, holes, boxes, player, false, 0);
};
var _user$project$Model$level_01 = _user$project$Model$strToLevel(_user$project$Levels$level_01_str);
var _user$project$Model$level_error = _user$project$Model$strToLevel(_user$project$Levels$level_error_str);
var _user$project$Model$levels = A2(
	_elm_lang$core$List$indexedMap,
	F2(
		function (i, level_str) {
			return A6(
				_user$project$Model$LevelInfo,
				i + 1,
				_user$project$Model$strToLevel(level_str),
				_elm_lang$core$Native_Utils.eq(i, 0),
				0,
				0,
				0);
		}),
	_user$project$Levels$level_list_str);
var _user$project$Model$GSPlaying = {ctor: 'GSPlaying'};
var _user$project$Model$GSMenu = {ctor: 'GSMenu'};
var _user$project$Model$init = A6(_user$project$Model$Model, _user$project$Model$levels, _user$project$Model$level_01, _user$project$Model$GSMenu, 1, 0.0, 0.0);
